---
title-block-banner: true
title: "Structural analysis of KLF4-KO brains in the ipsilateral hemisphere"
subtitle: "Data analysis notebook"
date: today
date-format: full
author: 
  - name: "Daniel Manrique-Castano"
    orcid: 0000-0002-1912-1764
    degrees:
      - PhD
    affiliation: 
      - name: Univerisity Laval 
        department: Psychiatry and Neuroscience
        group: Laboratory of neurovascular interactions 
note: "GitHub: https://daniel-manrique.github.io/"
keywords: 
  - GFAP
  - PDGFR-β
  - Brain injury
  - Brain shrinkage
  - Cell proliferation
  - Bayesian modeling 
   
license: "CC BY"

format:
   pdf: 
    toc: true
    number-sections: true
    colorlinks: true
   html:
    code-fold: true
    embed-resources: true
    toc: true
    toc-depth: 2
    toc-location: left
    number-sections: true
    theme: spacelab

knitr:
  opts_chunk: 
    warning: false
    message: false
    
csl: science.csl
bibliography: references.bib
---

# Preview

In this notebook, we perform the analysis of the structural changes in KLF4 brain and related glial/fibrotic scar markers in the ipsilateral hemisphere following cerebral ischemia.

**Parent dataset:** PDGFR-β and GFAP stained ischemic hemispheres imaged at 5x (with stitching). Samples are grouped as KO (PDGFR-β/KLF4KO) and WT (Wild type controls). The mice were sacrificed 14 days post-ischemia (DPI) and four WT brains with no ischemia were added as a base control for measurement errors. The raw images and pre-processing scripts (if applicable) are available at the Zenodo repository (10.5281/zenodo.10553084) under the name `Widefield_5x_Ipsilateral_KO:Pdgfrb-NeuN-Gfap.zip`. Please note that the NeuN channel was not analyzed in the current notebook. 

**Working dataset**: This notebook uses two datasets. First, the `Data_Processed/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap/Widefield_5x_Ipsilateral_Shrinkage.csv` file containing measurements of the ipsilateral and contralateral hemispheres performed by the researchers in FIJI. Second, the `Data_Raw/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap/Image.csv`data frame contains the measurements for area and intensity conducted on CellProfiler [@stirling2021]. We performed pixel classification in Ilastik [@berg2019] for PDGFR-β (https://osf.io/yqwuj) and GFAP (https://osf.io/hytpc). The CellProfiler pipeline is also available at (https://osf.io/ks5yg).

# Install and load required packages

Install and load all required packages. Please uncomment (delete #) the line code if installation is required. Load the installed libraries each time you start a new R session.

```{r}
#| label: Install_Packages
#| include: true
#| warning: false
#| message: false

#install.packages("devtools")
#library(devtools)

#install.packages(c("bayesplot", "bayestestR", "brms","dplyr", "easystats", "GGally", "ggplot","gtsummary", "modelbased", "modelr", "modelsummary", "patchwork", "poorman","plyr", "spatstat", "tidybayes", "tidyverse", "viridis"))

library(bayesplot)
library(bayestestR)
library(brms)
library(dplyr)
library(easystats)
library(emmeans)
library(GGally)
library(ggplot2)
library(gtsummary)
library(modelbased)
library(modelr)
library(modelsummary)
library(patchwork)
library(poorman)
library(plyr)
library(spatstat)
library(tidybayes)
library(tidyverse)
library(viridis)
```

# Visual themes

We create a visual theme to use in our plots.

```{r}
#| label: Plot_Theme
#| include: true
#| warning: false
#| message: false
  
Plot_theme <- theme_classic() +
  theme(
      plot.title = element_text(size=18, hjust = 0.5, face="bold"),
      plot.subtitle = element_text(size = 10, color = "black"),
      plot.caption = element_text(size = 12, color = "black"),
      axis.line = element_line(colour = "black", size = 1.5, linetype = "solid"),
      axis.ticks.length=unit(7,"pt"),
     
      axis.title.x = element_text(colour = "black", size = 16),
      axis.text.x = element_text(colour = "black", size = 16, angle = 0, hjust = 0.5),
      axis.ticks.x = element_line(colour = "black", size = 1),
      
      axis.title.y = element_text(colour = "black", size = 16),
      axis.text.y = element_text(colour = "black", size = 16),
      axis.ticks.y = element_line(colour = "black", size = 1),
      
      legend.position="right",
      legend.direction="vertical",
      legend.title = element_text(colour="black", face="bold", size=12),
      legend.text = element_text(colour="black", size=10),
      
      plot.margin = margin(t = 10,  # Top margin
                             r = 2,  # Right margin
                             b = 10,  # Bottom margin
                             l = 10) # Left margin
      ) 
```

# Load the data sets

We load the dataset and handle it the subset the columns of interest.

```{r}
#| label: Area-Intensity_Load 
#| include: true
#| warning: false
#| message: false
#| cache: true

# Load the dataset for brain shrinkage
Shrinkage <- read.csv(file = "Data_Processed/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap/Widefield_5x_Ipsilateral_Shrinkage.csv", header = TRUE)

# We load the dataset for area and intensity measurements
Area_Intensity <- read.csv(file = "Data_Raw/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap/Image.csv", header = TRUE)

```

Now, we handle the data frames to obtain the variables of interest in a single data frame. From `Area_Intensity`, we are interested in `FileName_Gfap` to obtain the image metadata `Intensity_MeanIntensity_Gfap_Masked` to get the mean intensity of the Gfap labeling, `Intensity_MeanIntensity_Pdgfrb_Masked` to obtain the mean intensity of the PDGFR-β labeling, and `Intensity_TotalArea_Gfap_Masked` and `Intensity_TotalArea_Pdgfrb_Masked` to get the labeled area. 

```{r}
#| label: Area-Intensity_Handle 
#| include: true
#| warning: false
#| message: false
#| cache: true

## We subset the relevant columns (cell number)
Area_Intensity <- subset(Area_Intensity, select = c("FileName_Gfap", "Intensity_MeanIntensity_Pdgfrb_Masked", "Intensity_MeanIntensity_Gfap_Masked",  "Intensity_TotalArea_Pdgfrb_Masked", "Intensity_TotalArea_Gfap_Masked"))

## And extract metadata from the image name
Area_Intensity  <- cbind(Area_Intensity, do.call(rbind , strsplit(Area_Intensity$FileName_Gfap, "[_\\.]"))[,1:3])

Area_Intensity <- subset(Area_Intensity, select = -c(FileName_Gfap))

## We Rename the relevant columns 
colnames(Area_Intensity) <- c("Pdgfrb_Intensity", "Gfap_Intensity", "Pdgfrb_Area", "Gfap_Area", "MouseID", "DPI", "Genotype")

## We set the factors
Area_Intensity$DPI <- factor(Area_Intensity$DPI, levels = c("0D", "14D"))
Area_Intensity$Genotype <- factor(Area_Intensity$Genotype, levels = c("WT", "KO"))


# We create column to related the area-intensity measurements
Area_Intensity$Pdgfrb_IntDen <- (Area_Intensity$Pdgfrb_Area / Area_Intensity$Pdgfrb_Intensity) / 10000
Area_Intensity$Gfap_IntDen <- (Area_Intensity$Gfap_Area / Area_Intensity$Gfap_Intensity) / 10000

# We bind the two datasets

Structure <- cbind (Area_Intensity, Shrinkage$Ratio, Shrinkage$Ipsilateral)
colnames(Structure)[10] <- "Shrinkage"
colnames(Structure)[11] <- "Ipsilateral"

write.csv(Structure, "Data_Processed/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap/Widefield_5x_Ipsilateral_Structure.csv", row.names = FALSE)

gt::gt(Structure[1:10,])
```

# Analysis of brain shrinkage

We start by analyzing brain shrinkage in WT and KLF4-KO animals 14 days after injury.

## Exploratory data visualization

We plot the variable of interest using boxplots

```{r}
#| label: fig-Shrinkage_Exploratory
#| include: true
#| warning: false
#| message: false
#| fig-cap: Exploratory data visualization for brain shrinkage 
#| fig-height: 5
#| fig-width: 5

set.seed(8807)

Shrinkage_box <- 
  ggplot(
    data  = Structure, 
    aes(x = DPI, 
        y = Shrinkage,
        color = Genotype)) +
  geom_boxplot(outliers = FALSE) +
  geom_jitter(width = 0.2) +
  scale_y_continuous(name= expression("Ratio Ipsilateral/Contralateral")) +
  scale_x_discrete(name="DPI",
                     breaks=c("0D", "14D")) +
  Plot_theme

Shrinkage_box
```

We observe that our reference sham animals show an atrophy ratio of about 1, which means both hemispheres are equal size, as expected. At 14 DPI, we do not see a clear difference between both genotypes. It seems as well that 1 WT animal (KL35) has an abnormal (incomplete) stroke, given that there is no atrophy. As this animal does not belong to the population, we exclude for further analysis

```{r}
Structure <- Structure[Structure$MouseID != "KL35",]
```


## Statistical modeling

We'll fit a statistical model for the 14 DPI animals using a student-T distribution using the `brms` package [@burkner2018; @brms]. We fit the following models:

-   **Shrinkage_0D:** This is an intercept-only model with no predictors.

$$
Shrinkage_{i} = \beta_{0} + \epsilon_{i}
$$
Where $\beta_{0}$ is the the intercept. In this cases, the mean Shrinkage of control animals, and $\epsilon_{i}$ is the error for each observation.

This model uses an informative prior given the low number of observations. Given that we do not expect meaningful differences in the are between hemispheres, we set the following prior: 

$$
\begin{align}
\beta_{0} \sim Normal(1, 0.1) \\
\end{align}
$$

-   **Shrinkage_Fit1:** We fit a student family model to explore the relationship between Shrinkage and Genotype. The model takes the following notation:

$$
Shrinkage_i = \beta_0 + \beta_1 \times Genotype_i + \epsilon_i
$$

Where: $\beta_0$ is the intercept—baseline value for WT; $\beta_1$ is the effect size of KLF4-KO on Shrinkage; and $\epsilon_i$ is the error term. Given our previous results for  animals for PDGFR-β-TdTomato animals at 14 DPI, the model uses the following prior:

$$
\begin{align}
\beta_{0} \sim Normal(0.7,0.2) \\
\end{align}
$$
### Fit the models

```{r}
#| label: Klf4_Shrikage_Modeling
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

# We subset the 0D group
Structure_0D <- Structure[Structure$DPI == "0D",]

# Model 1: Genotype as a single predictor
Shrinkage_0D <- bf(Shrinkage ~ 1)
                     
get_prior(Shrinkage_0D, data = Structure_0D, family = student)

Shrinkage_0D_Prior1 <- 
  c(prior(normal(1,0.1), class = Intercept))
    
# Fit model 1
Shrinkage_0D <- 
  brm(
    data    = Structure_0D,
    family  = student, 
    formula = Shrinkage_0D,
    prior   = Shrinkage_0D_Prior1,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Shrinkage_0D.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Shrinkage_0D <- 
  add_criterion(Shrinkage_0D, c("loo", "waic", "bayes_R2"))


# We subset the animals for 14 DPI
Structure_sub <- Structure[Structure$DPI == "14D",]

# Model 1: Genotype as a single predictor
Shrinkage_Mdl1 <- bf(Shrinkage ~ Genotype)
                     

get_prior(Shrinkage_Mdl1 , data = Structure_sub, family = student)

Shrinkage_Prior1 <- 
  c(prior(normal(0.7,0.2), class = b))
    
# Fit model 1
Shrinkage_Fit1 <- 
  brm(
    data    = Structure_sub,
    family  = student, 
    formula = Shrinkage_Mdl1,
    prior   = Shrinkage_Prior1,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Shrinkage_Fit1.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Shrinkage_Fit1 <- 
  add_criterion(Shrinkage_Fit1, c("loo", "waic", "bayes_R2"))


# Model 2: Genotype and Pdgfrb as predictors
Shrinkage_Mdl2 <- bf(Shrinkage ~ Pdgfrb_IntDen * Genotype)

get_prior(Shrinkage_Mdl2 , data = Structure_sub, family = student)

# Fit model 2
Shrinkage_Fit2 <- 
  brm(
    data    = Structure_sub,
    family  = student, 
    formula = Shrinkage_Mdl2,
    #prior   = Shrinkage_Prior1,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Shrinkage_Fit2.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Shrinkage_Fit2 <- 
  add_criterion(Shrinkage_Fit2, c("loo", "waic", "bayes_R2"))
```

## Model diagnostics

We check the model fitting using posterior predictive checks

```{r}
#| label: fig-Klf4_Shrikage_Diagnostics
#| include: true
#| warning: false
#| message: false
#| cache: true
#| fig-cap: Model dianostics using pp_checks
#| fig-height: 5
#| fig-width: 10
 
set.seed(8807)

Shrinkage_0D_pp <- 
  brms::pp_check(Shrinkage_0D, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Shrinkage ~ 1") +
  Plot_theme  

Shrinkage_Fit1_pp <- 
  brms::pp_check(Shrinkage_Fit1, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Shrinkage ~ Genotype") +
  Plot_theme  
  
Shrinkage_0D_pp | Shrinkage_Fit1_pp
```

We observe no major deviations from the data in both cases. We can explore further the model using `shinystan`.

```{r}
#| label: Klf4_Shrikage_Shiny
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

#launch_shinystan(Shrinkage_0D)
#launch_shinystan(Shrinkage_Fit1)
```

## Model results

### Visualization of conditional effects

```{r}
#| label: fig-Klf4_Shrikage_CE 
#| include: true
#| warning: false
#| message: false
#| fig-cap: Conditional effects for brain shrinkage
#| fig-height: 5
#| fig-width: 10

set.seed(8807)

# We plot the 0D shrinkage reference

Shrinkage_0D_fig <- Shrinkage_0D %>%
   spread_draws(b_Intercept) %>%
   ggplot(aes(x = b_Intercept)) +
   stat_halfeye() +
   scale_y_continuous(name = "Probability density") +
   scale_x_continuous(name = "Hemispheric ratio",
                     limits = c(0.8, 1.3),
                      breaks = seq(0.8, 1.2, 0.2) ) +

  Plot_theme 

ggsave(
  plot     = Shrinkage_0D_fig, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Shrinkage_0D.png", 
  width    = 7, 
  height   = 7, 
  units    = "cm")

Shrinkage_0D_fig  


# We plot the contrast between WT and KO

Shrinkage_Contrast <- Shrinkage_Fit1 %>%
   spread_draws(b_GenotypeKO) %>%
   mutate(Genotype_contrast = b_GenotypeKO) %>%
   ggplot(aes(x = Genotype_contrast, fill = after_stat(abs(x) < 0.07))) +
   stat_halfeye() +
  geom_vline(xintercept = c(-0.07, 0.07), linetype = "dashed") +
  scale_fill_manual(
    name="ROPE", 
    values = c("gray80", "skyblue"),
    labels = c("False", "True")) +
  scale_y_continuous(name = "Probability density") +
  scale_x_continuous(name = "Contrast (KO-WT)",
                     limits = c(-0.2, 0.4),
                      breaks = seq(-0.2, 0.4, 0.2) ) +

  Plot_theme +
  theme (legend.position = c(0.8, 0.8))

ggsave(
  plot     = Shrinkage_Contrast, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Shrinkage_Fit1.png", 
  width    = 7, 
  height   = 7, 
  units    = "cm")

Shrinkage_0D_fig | Shrinkage_Contrast 
```

@fig-Klf4_Shrikage_CE shows that we have no evidence that KLF4 impacts brain shrinkage.

### Posterior summary

Next, we plot the posterior summary using the `describe_posterior` function. We to this specifically for our 14 DPI animals. 

```{r}
#| label: Shrinkage_Posterior
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

describe_posterior(
  Shrinkage_Fit1,
  effects = "all",
  test = c("p_direction", "rope"),
  component = "all",
  centrality = "median")

modelsummary(Shrinkage_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             title = "Hemisferic Shrinkage in PDGFR-β-KLF4-KO mice",
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "Tables/html/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Shrinkage_Fit1_Table.html",
             )

Shrinkage_Fit1_Table <- modelsummary(Shrinkage_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "gt")
gt::gtsave (Shrinkage_Fit1_Table, 
            filename = "Tables/tex/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Shrinkage_Fit1_Table.tex")
```

# Analysis of PDGFR-β and GFAP reactivity 

Next, we analyze the integrated density of PDGFR-β and GFAP staining to visualize astroglial scar formation.  

## Statistical model

We fir the following models using `brms`:

-   **Pdgfrb_Fit1:** We fit a student family model to explore the relationship between Shrinkage and Genotype. The model takes the following notation:

$$
Pdgfrb_i = \beta_0 + \beta_1 \times Genotype_i + \epsilon_i
$$

Where: $\beta_0$ is the intercept—baseline value for WT; $\beta_1$ is the effect size of KLF4-KO on Shrinkage; and $\epsilon_i$ is the error term. Given our previous results for  animals for PDGFR-β-TdTomato animals at 14 DPI, the model uses the default `brms` priors. 

For GFAP expression, we fit an analogous model.

### Fit the models

```{r}
#| label: Klf4_Pdgfrb-Gfap_Modeling
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

# Model 1: Genotype as predictor for Pdgfrb_IntDen
Pdgfrb_Mdl1 <- bf(Pdgfrb_IntDen ~ Genotype)

get_prior(Pdgfrb_Mdl1 , data = Structure_sub, family = student)

# Fit model 1
Pdgfrb_Fit1 <- 
  brm(
    data    = Structure_sub,
    family  = student, 
    formula = Pdgfrb_Mdl1,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb_Fit1.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Pdgfrb_Fit1 <- 
  add_criterion(Pdgfrb_Fit1, c("loo", "waic", "bayes_R2"))


# Model 2: Genotype as predictor for Gfap_IntDen
Gfap_Mdl1 <- bf(Gfap_IntDen ~ Genotype)

get_prior(Gfap_Mdl1 , data = Structure_sub, family = student)

# Fit model 1
Gfap_Fit1 <- 
  brm(
    data    = Structure_sub,
    family  = student, 
    formula = Gfap_Mdl1,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Gfap_Fit1.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Gfap_Fit1 <- 
  add_criterion(Gfap_Fit1, c("loo", "waic", "bayes_R2"))
```

## Model diagnostics

We check the model fitting using posterior predictive checks

```{r}
#| label: fig-Klf4_Pdgfrb-Gfap_Diagnostics
#| include: true
#| warning: false
#| message: false
#| cache: true
#| fig-cap: Model dianostics using pp_checks
#| fig-height: 5
#| fig-width: 10
 
set.seed(8807)

Pdgfrb_Fit1_pp <- 
  brms::pp_check(Pdgfrb_Fit1, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Pdgfrb ~ Genotype") +
  Plot_theme  

Gfap_Fit1_pp <- 
  brms::pp_check(Gfap_Fit1, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Gfap ~ Genotype") +
  Plot_theme  
  
Pdgfrb_Fit1_pp | Gfap_Fit1_pp
```

Se see no major deviations from the observed data.

## Model results

### Visualization of conditional effects

```{r}
#| label: fig-Klf4_Pdgfrb-Gfap_CE 
#| include: true
#| warning: false
#| message: false
#| fig-cap: Conditional effects for PDGFR-β and GFAP
#| fig-height: 5
#| fig-width: 10

Pdgfrb_Contrast <- Pdgfrb_Fit1 %>%
   spread_draws(b_GenotypeKO) %>%
   mutate(Genotype_contrast = b_GenotypeKO) %>%
   ggplot(aes(x = Genotype_contrast, fill = after_stat(abs(x) < 90))) +
   stat_halfeye() +
  geom_vline(xintercept = c(-90, 90), linetype = "dashed") +
  scale_fill_manual(
    name="ROPE", 
    values = c("gray80", "skyblue"),
    labels = c("False", "True")) +
  scale_y_continuous(name = "Probability density") +
  scale_x_continuous(name = "Contrast (KO-WT)",
                     limits = c(-400, 250),
                      breaks = seq(-400, 200, 200) ) +

  Plot_theme +
  theme (legend.position = c(0.8, 0.8))

ggsave(
  plot     = Pdgfrb_Contrast, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit1.png", 
  width    = 7, 
  height   = 7, 
  units    = "cm")

Pdgfrb_Contrast 


Gfap_Contrast <- Gfap_Fit1 %>%
   spread_draws(b_GenotypeKO) %>%
   mutate(Genotype_contrast = b_GenotypeKO) %>%
   ggplot(aes(x = Genotype_contrast, fill = after_stat(abs(x) < 107))) +
   stat_halfeye() +
  geom_vline(xintercept = c(-107, 107), linetype = "dashed") +
  scale_fill_manual(
    name="ROPE", 
    values = c("gray80", "skyblue"),
    labels = c("False", "True")) +
  scale_y_continuous(name = "Probability density") +
  scale_x_continuous(name = "Contrast (KO-WT)",
                     limits = c(-200, 500),
                      breaks = seq(-200, 500, 200) ) +

  Plot_theme +
  theme (legend.position = c(0.8, 0.8))

ggsave(
  plot     = Gfap_Contrast, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Gfap_Fit1.png", 
  width    = 7, 
  height   = 7, 
  units    = "cm")

Gfap_Contrast 
```

### Posterior summary

We plot the posterior summary and respective tables:

```{r}
#| label: Pdgfrb-Gfap_Posterior
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

## For PDGFR-B

describe_posterior(
  Pdgfrb_Fit1,
  effects = "all",
  test = c("p_direction", "rope"),
  component = "all",
  centrality = "median")

modelsummary(Pdgfrb_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             title = "Hemisferic Pdgfrb in PDGFR-β-KLF4-KO mice",
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "Tables/html/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit1_Table.html",
             )

Pdgfrb_Fit1_Table <- modelsummary(Pdgfrb_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "gt")
gt::gtsave (Pdgfrb_Fit1_Table, 
            filename = "Tables/tex/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit1_Table.tex")

## For GFAP

describe_posterior(
  Gfap_Fit1,
  effects = "all",
  test = c("p_direction", "rope"),
  component = "all",
  centrality = "median")

modelsummary(Gfap_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             title = "Hemisferic Gfap in PDGFR-β-KLF4-KO mice",
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "Tables/html/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Gfap_Fit1_Table.html",
             )

Gfap_Fit1_Table <- modelsummary(Gfap_Fit1, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "gt")
gt::gtsave (Gfap_Fit1_Table, 
            filename = "Tables/tex/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Gfap_Fit1_Table.tex")
```
# Two additional models

Finally, to control for possible covariates, specifically for PDGFR-β integrated density, we perform regressions conditioning on Shrinkage and the Ipsilateral area. To have more meaningful results, we scale the variable for the ipsilateral area. 

## Statistical modeling

We fit the following models:

- **Pdgfrb_Fit2:** We condition the integrated density of PDGFR-β on the interaction between Genotype and Shrinkage. By incorporating the interaction term, this model allows us to explore how the relationship between `Genotype` and `Pdgfrb_IntDen` varies across different levels of `Shrinkage`. The model is formulated as follows

$$
Pdgfrb\_IntDen_i = \beta_0 + \beta_1 \times Genotype_i + \beta_2 \times Shrinkage_i + \beta_3 \times (Genotype_i \times Shrinkage_i) + \epsilon_i
$$
Where $\beta_0$ is the baseline integrated density of PDGFR-β at baseline values. $\beta_1$ represents the effect of Genotype on Pdgfrb_IntDen. $\beta_2$ indicates the effect of Shrinkage on Pdgfrb_IntDen, and $\beta_3$
captures the interaction effect between Genotype and Shrinkage on Pdgfrb_IntDen. Finally, $\epsilon_i$ is the error term.

The model uses the default `brms` priors.

- **Pdgfrb_Fit3:** We condition the integrated density of PDGFR-β on the interaction between Genotype and the ipsilateral area.The model assumes the same formulation as the previous model.

### Fit the models
```{r}
Structure_sub_Scaled <- scale(Structure_sub$Ipsilateral, scale = TRUE, center = TRUE)
Structure_sub_Scaled <- cbind(Structure_sub, Structure_sub_Scaled)
colnames(Structure_sub_Scaled)[12] <- "Ipsilateral_Scaled"

# Model 1: Genotype and Shrinkage as predictors
Pdgfrb_Mdl2 <- bf(Pdgfrb_IntDen ~  Genotype * Shrinkage)

get_prior(Pdgfrb_Mdl2 , data = Structure_sub_Scaled, family = student)

# Fit model 1
Pdgfrb_Fit2 <- 
  brm(
    data    = Structure_sub_Scaled,
    family  = student, 
    formula = Pdgfrb_Mdl2,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb_Fit2.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Pdgfrb_Fit2 <- 
  add_criterion(Pdgfrb_Fit2, c("loo", "waic", "bayes_R2"))


# Model 2: Genotype and Ipsilateral area as predictors
Pdgfrb_Mdl3 <- bf(Pdgfrb_IntDen ~  Genotype * Ipsilateral_Scaled)

get_prior(Pdgfrb_Mdl3, data = Structure_sub_Scaled, family = student)

# Fit model 1
Pdgfrb_Fit3 <- 
  brm(
    data    = Structure_sub_Scaled,
    family  = student, 
    formula = Pdgfrb_Mdl3,
    chains  = 4,
    cores   = 4,
    warmup  = 2500, 
    iter    = 5000, 
    seed    = 8807,
    control = list(adapt_delta = 0.99, max_treedepth = 15),
    file    = "Models/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb_Fit3.rds",
    file_refit = "never") 
                     
# Add loo for model comparison
Pdgfrb_Fit3 <- 
  add_criterion(Pdgfrb_Fit3, c("loo", "waic", "bayes_R2"))
```

## Model diagnostics

We check the model fitting using posterior predictive checks

```{r}
#| label: fig-Pdgfrb_Additional_Diagnostics
#| include: true
#| warning: false
#| message: false
#| cache: true
#| fig-cap: Model dianostics using pp_checks
#| fig-height: 5
#| fig-width: 10
 
set.seed(8807)

Pdgfrb_Fit2_pp <- 
  brms::pp_check(Pdgfrb_Fit2, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Pdgfrb ~ Genotype * Shrinkage") +
  Plot_theme  

Pdgfrb_Fit3_pp <- 
  brms::pp_check(Pdgfrb_Fit3, 
                 ndraws = 100) +
  labs(title = "Posterior predictive checks",
  subtitle = "Formula: Gfap ~ Genotype * Ipsilateral") +
  Plot_theme  
  
Pdgfrb_Fit2_pp | Pdgfrb_Fit3_pp
```
We observe neither of the models present meaningful deviation from the observed data. 

## Model results

### Visualization of conditional effects

```{r}
#| label: fig-Klf4_Pdgfrb-Shrinkage-Ipsi_CE 
#| include: true
#| warning: false
#| message: false
#| fig-cap: Conditional effects for interactions
#| fig-height: 5
#| fig-width: 10

## For Genotype * Shrinkage

Pdgfrb_Fit2_CE <- 
  conditional_effects(Pdgfrb_Fit2)

Pdgfrb_Fit2_CE <- plot(Pdgfrb_Fit2_CE, 
       plot = FALSE)[[3]]

Pdgfrb_Fit2_fig <- Pdgfrb_Fit2_CE + 
  scale_y_continuous(name = "PDGFR-β (IntDen)") +
  scale_x_continuous(name= expression ("Shrinkage (ratio)"),
                     breaks = seq(0.6, 1, 0.1)) +
  scale_color_manual(name = "",
                       values = c("#4DB6D0", "#D9717D"),
                       labels = c("Wildtype", expression ("PDGFR-β"^KLF4_KO))) +
 scale_fill_manual(name = "",
                     values = c("#4DB6D0", "#D9717D"),
   labels = c("Wildtype", expression ("PDGFR-β"^KLF4_KO))) +
  
  Plot_theme +
  theme(
  legend.position = "top", 
  legend.direction = "horizontal",
  legend
  )

  ggsave(
  plot     = Pdgfrb_Fit2_fig, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit2.png",  
  width    = 11, 
  height   = 9, 
  units    = "cm")


## For Genotype * Ipsilateral area

Pdgfrb_Fit3_CE <- 
  conditional_effects(Pdgfrb_Fit3)

Pdgfrb_Fit3_CE <- plot(Pdgfrb_Fit3_CE, 
       plot = FALSE)[[3]]

Pdgfrb_Fit3_fig <- Pdgfrb_Fit3_CE + 
  scale_y_continuous(name = "PDGFR-β (IntDen)") +
  scale_x_continuous(name= expression ("Ipsilateral area (scaled)"))+
                     
  scale_color_manual(name = "",
                       values = c("#4DB6D0", "#D9717D"),
                       labels = c("Wildtype", expression ("PDGFR-β"^KLF4_KO))) +
 scale_fill_manual(name = "",
                     values = c("#4DB6D0", "#D9717D"),
   labels = c("Wildtype", expression ("PDGFR-β"^KLF4_KO))) +
  
  Plot_theme +
  theme(
  legend.position = "top", 
  legend.direction = "horizontal",
  legend
  )

  ggsave(
  plot     = Pdgfrb_Fit3_fig, 
  filename = "Plots/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Structure/Widefield_5x_Ipsilateral_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit3.png",  
  width    = 11, 
  height   = 9, 
  units    = "cm")

Pdgfrb_Fit2_fig + Pdgfrb_Fit3_fig
```

### Posterior summary

We plot the posterior summary and respective tables:

```{r}
#| label: Pdgfrb-Shrinkage-Genotype_Posterior
#| include: true
#| warning: false
#| message: false
#| results: false
#| cache: true

## For Fit 2

describe_posterior(
  Pdgfrb_Fit2,
  effects = "all",
  test = c("p_direction", "rope"),
  component = "all",
  centrality = "median")

modelsummary(Pdgfrb_Fit2, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             title = "Hemisferic Pdgfrb in PDGFR-β-KLF4-KO mice",
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "Tables/html/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit2_Table.html",
             )

Pdgfrb_Fit2_Table <- modelsummary(Pdgfrb_Fit2, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "gt")
gt::gtsave (Pdgfrb_Fit2_Table, 
            filename = "Tables/tex/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit2_Table.tex")

## For Fit 3

describe_posterior(
  Pdgfrb_Fit3,
  effects = "all",
  test = c("p_direction", "rope"),
  component = "all",
  centrality = "median")

modelsummary(Pdgfrb_Fit3, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             title = "Hemisferic Pdgfrb in PDGFR-β-KLF4-KO mice",
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "Tables/html/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit3_Table.html",
             )

Pdgfrb_Fit3_Table <- modelsummary(Pdgfrb_Fit3, 
             shape = term ~ model + statistic,
             centrality = "mean", 
             statistic = "conf.int",
             gof_omit = 'ELPD|ELDP s.e|LOOIC|LOOIC s.e|WAIC|RMSE',
             output = "gt")
gt::gtsave (Pdgfrb_Fit3_Table, 
            filename = "Tables/tex/Widefield_5x_Ipsilateral_KO_Pdgfrb-NeuN-Gfap_Pdgfrb_Fit3_Table.tex")
```



# References

::: {#refs}
:::


```{r}
sessionInfo()
```
